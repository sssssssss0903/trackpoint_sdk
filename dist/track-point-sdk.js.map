{"version":3,"file":"track-point-sdk.js","mappings":"CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,GACe,iBAAZC,QACdA,QAAuB,cAAID,IAE3BD,EAAoB,cAAIC,GACzB,CATD,CASGK,MAAM,I,wCCRTC,OAAOC,eAAeN,EAAS,aAAc,CAAEO,OAAO,IACtDP,EAAQQ,SAAWR,EAAQS,4BAAyB,EACpD,MAAMC,EAAU,EAAQ,KAClBC,EAAU,EAAQ,KACxB,SAASF,IAEL,MAAMG,EAAcC,UAAUC,UAE9B,IAAIC,EAAS,aAiBb,MAhBI,kBAAkBC,KAAKJ,GACvBG,EAAS,aACJ,iBAAiBC,KAAKJ,GAC3BG,EAAS,YACJ,YAAYC,KAAKJ,GACtBG,EAAS,SACJ,QAAQC,KAAKJ,GAClBG,EAAS,QACJ,UAAUC,KAAKJ,GACpBG,EAAS,UACJ,mBAAmBC,KAAKJ,KAC7BG,EAAS,OAKN,CAAEE,aAAcL,EAAaM,QAASH,EAAQI,IAHtCC,aAAaC,QAAQ,YAAc,iBAGgBC,WADhD,IAAIC,MAAOC,cAEjC,CACAxB,EAAQS,uBAAyBA,EAmBjCT,EAAQQ,SAZR,SAAkBiB,GAEd,MAAMC,EAAkBjB,IAElBkB,EAAiB,IAChBF,IAEP,EAAIf,EAAQkB,iBAAiBF,IAX7B,EAAIf,EAAQkB,uBACZ,EAAIlB,EAAQmB,mCAaZC,QAAQC,IAAI,+BAAgCL,EAChD,C,cC7CAtB,OAAOC,eAAeN,EAAS,aAAc,CAAEO,OAAO,IACtDP,EAAQiC,UAAYjC,EAAQ4B,qBAAkB,EAE9C,IAAIM,EAAe,CAAC,EAOpBlC,EAAQ4B,gBALR,SAAyBO,GAErBD,EAAe,IAAKA,KAAiBC,GACrCJ,QAAQC,IAAI,yBAA0BE,EAC1C,EAsCAlC,EAAQiC,UA7BR,SAAmBG,EAAWD,EAAQE,GAElC,GATJ,SAA2BA,GAIvB,OAFeC,KAAKC,SAEJF,CACpB,CAIQG,CAAkBH,GAAgB,CAElC,MAAMI,EAAc,IAAKP,KAAiBC,GAE1CJ,QAAQC,IAAI,SAASI,0BAAmCK,GAGxDC,MADe,0CACD,CACVC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACjBC,WAAYZ,EACZa,WAAYR,MAGfS,MAAMC,GAAaA,EAASC,SAC5BF,MAAMG,IACPtB,QAAQC,IAAI,+BAAgCqB,EAAK,IAEhDC,OAAOC,IACRxB,QAAQwB,MAAM,yBAA0BA,EAAM,GAEtD,MAEIxB,QAAQC,IAAI,SAASI,kCAE7B,C,gBC9CA/B,OAAOC,eAAeN,EAAS,aAAc,CAAEO,OAAO,IACtDP,EAAQ8B,gCAAkC9B,EAAQ6B,wBAAqB,EACvE,MAAMnB,EAAU,EAAQ,KAiCxBV,EAAQ6B,mBA/BR,WACI2B,OAAOC,QAAU,SAAUC,EAC3BC,EACAC,EACAC,EACAN,GAGQG,aAAmBI,QACnBJ,EAAU,gBAAgBA,EAAQK,QAGtC,MAKMC,EAAcT,GAAS,KAEvBU,EAAc,CAChBP,UACAC,OATiBA,GAAU,iBAU3BC,OAReA,GAAU,EASzBC,MARiBA,GAAS,EAS1BK,YAAaF,GAAaG,OAAS,GACnC7C,WAAW,IAAIC,MAAOC,eAG1B,OADA,EAAId,EAAQuB,WAAW,mBAAoBgC,EAAa,IACjD,CACX,CACJ,EAaAjE,EAAQ8B,gCAVR,WACI0B,OAAOY,iBAAiB,sBAAuBC,IAC3C,MAAMJ,EAAc,CAChBP,QAASW,EAAMC,QAAQZ,SAAW,gBAClCS,MAAOE,EAAMC,QAAQH,OAAS,GAC9B7C,WAAW,IAAIC,MAAOC,gBAE1B,EAAId,EAAQuB,WAAW,8BAA+BgC,EAAa,EAAE,GAE7E,C,GC9CIM,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAa1E,QAGrB,IAAIC,EAASsE,EAAyBE,GAAY,CAGjDzE,QAAS,CAAC,GAOX,OAHA4E,EAAoBH,GAAUxE,EAAQA,EAAOD,QAASwE,GAG/CvE,EAAOD,OACf,C,6BCrBAK,OAAOC,eAAeN,EAAS,aAAc,CAAEO,OAAO,IAEtD,MAAMG,EAAU,EAAQ,KAClBmE,EAAa,EAAQ,KAErBC,EAAgB,CAClBC,WAAY,OACZC,eAAgB,IAChBC,QAASzB,OAAO0B,SAASC,OAE7B,WAEI,MAAMC,EAAY,IACXN,EACHC,WAAYvB,OAAO6B,cAAgBP,EAAcC,WACjDC,eAAgBxB,OAAO8B,kBAAoBR,EAAcE,iBAG7D,EAAIH,EAAWrE,UAAU4E,GAEzB5B,OAAOY,iBAAiB,QAAQ,MAC5B,EAAI1D,EAAQuB,WAAW,YAAa,CAChCsD,SAAU/B,OAAO0B,SAASC,KAC1BK,WAAYC,SAASC,MACrBpE,WAAW,IAAIC,MAAOC,eACvB4D,EAAUJ,eAAe,IAGhCS,SAASE,iBAAiB,UAAUC,SAAQC,IACxCA,EAAOzB,iBAAiB,SAAS,MAC7B,EAAI1D,EAAQuB,WAAW,eAAgB,CACnC6D,UAAWD,EAAOE,GAClBC,YAAaH,EAAOI,WAAaJ,EAAOtF,MACxCe,WAAW,IAAIC,MAAOC,eACvB4D,EAAUJ,eAAe,GAC9B,IAENS,SAASE,iBAAiB,KAAKC,SAAQM,IACnCA,EAAK9B,iBAAiB,SAAS,MAC3B,EAAI1D,EAAQuB,WAAW,aAAc,CACjCkE,UAAWD,EAAKf,KAChBiB,UAAWF,EAAKD,UAChB3E,WAAW,IAAIC,MAAOC,eACvB4D,EAAUJ,eAAe,GAC9B,IAUNS,SAASE,iBAAiB,mBAAmBC,SAASS,IAClD,MAAMC,EAASD,EACfC,EAAOlC,iBAAiB,QATX,MACb,IAAImC,EACJ,MAAO,IAAKC,KACRC,aAAaF,GACbA,EAAUG,YAAW,IAKiB,OACtC,EAAIhG,EAAQuB,WAAW,qBAAsB,CACzC0E,SAAUL,EAAOP,GACjBa,YAAaN,EAAO/F,MACpBe,WAAW,IAAIC,MAAOC,eACvB4D,EAAUJ,eAAe,EAVD6B,IAAQL,IAWpC,IAVF,CAAC,EAI+BM,GAMzB,IAGZtD,OAAOY,iBAAiB,UAAU,MAC9B,EAAI1D,EAAQuB,WAAW,cAAe,CAClC8E,gBAAiBvD,OAAOwD,QACxBC,YAAaxB,SAASyB,gBAAgBC,aACtC7F,WAAW,IAAIC,MAAOC,eACvB4D,EAAUJ,eAAe,IAGhCS,SAASE,iBAAiB,QAAQC,SAASwB,IACvCA,EAAKhD,iBAAiB,UAAWC,IAC7BA,EAAMgD,kBACN,EAAI3G,EAAQuB,WAAW,cAAe,CAClCqF,QAASF,EAAKrB,GACdwB,YAAaH,EAAKI,OAClBlG,WAAW,IAAIC,MAAOC,eACvB4D,EAAUJ,gBAEb0B,YAAW,KACPU,EAAKK,QAAQ,GACd,IAAI,GACT,GAET,CA7ED,E","sources":["webpack://TrackPointSDK/webpack/universalModuleDefinition","webpack://TrackPointSDK/./src/sdk/register.ts","webpack://TrackPointSDK/./src/sdk/event.ts","webpack://TrackPointSDK/./src/sdk/error.ts","webpack://TrackPointSDK/webpack/bootstrap","webpack://TrackPointSDK/./src/sdk/sdk.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"TrackPointSDK\"] = factory();\n\telse\n\t\troot[\"TrackPointSDK\"] = factory();\n})(self, () => {\nreturn ","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.register = exports.getUserEnvironmentInfo = void 0;\r\nconst event_1 = require(\"./event\");\r\nconst error_1 = require(\"./error\");\r\nfunction getUserEnvironmentInfo() {\r\n    // 浏览器信息\r\n    const browserInfo = navigator.userAgent;\r\n    // 获取操作系统信息\r\n    let osInfo = \"Unknown OS\"; // 默认操作系统为 \"Unknown\"\r\n    if (/Windows NT 10.0/.test(browserInfo))\r\n        osInfo = \"Windows 10\";\r\n    else if (/Windows NT 6.1/.test(browserInfo))\r\n        osInfo = \"Windows 7\";\r\n    else if (/Macintosh/.test(browserInfo))\r\n        osInfo = \"Mac OS\";\r\n    else if (/Linux/.test(browserInfo))\r\n        osInfo = \"Linux\";\r\n    else if (/Android/.test(browserInfo))\r\n        osInfo = \"Android\";\r\n    else if (/iPhone|iPad|iPod/.test(browserInfo))\r\n        osInfo = \"iOS\";\r\n    // 模拟用户 ID（在实际场景中应该通过用户认证信息获取）\r\n    const userId = localStorage.getItem('user_id') || 'anonymous_user';\r\n    // 获取当前时间\r\n    const timestamp = new Date().toISOString();\r\n    return { browser_info: browserInfo, os_info: osInfo, uid: userId, timestamp };\r\n}\r\nexports.getUserEnvironmentInfo = getUserEnvironmentInfo;\r\n// 初始化错误捕获\r\nfunction initErrorHandling() {\r\n    (0, error_1.setupErrorHandling)(); // 设置同步错误捕获\r\n    (0, error_1.setupUnhandledRejectionHandling)(); // 设置 Promise 错误捕获\r\n}\r\n// register 函数：初始化 SDK 配置并上传数据\r\nfunction register(config) {\r\n    // 获取用户环境信息\r\n    const userEnvironment = getUserEnvironmentInfo();\r\n    // 合并配置和用户环境信息\r\n    const completeConfig = {\r\n        ...config,\r\n    };\r\n    (0, event_1.addCommonParams)(userEnvironment);\r\n    // 设置错误捕获\r\n    initErrorHandling();\r\n    console.log('SDK initialized with config:', completeConfig);\r\n}\r\nexports.register = register;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.sendEvent = exports.addCommonParams = void 0;\r\n// 用于存储通用参数的全局对象\r\nlet commonParams = {};\r\n// addCommonParams 函数：允许在任意时刻添加通用参数\r\nfunction addCommonParams(params) {\r\n    // 合并新的参数到 existing commonParams\r\n    commonParams = { ...commonParams, ...params };\r\n    console.log('Updated common params:', commonParams);\r\n}\r\nexports.addCommonParams = addCommonParams;\r\nfunction shouldReportEvent(uploadPercent) {\r\n    // 生成一个 [0, 1) 之间的随机数\r\n    const random = Math.random();\r\n    // 如果随机数小于采样频率，则上报事件\r\n    return random < uploadPercent;\r\n}\r\n// 事件上报函数\r\nfunction sendEvent(eventName, params, uploadPercent) {\r\n    // 判断是否需要上报\r\n    if (shouldReportEvent(uploadPercent)) {\r\n        // 合并通用参数和事件参数\r\n        const eventParams = { ...commonParams, ...params };\r\n        // 上报事件\r\n        console.log(`Event ${eventName} uploaded with params:`, eventParams); // 修复了这里的拼接问题\r\n        // 这里通常会发送事件数据到服务器\r\n        const apiUrl = 'http://localhost:3001/api/upload-events'; // 处理事件数据的接口\r\n        fetch(apiUrl, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                event_name: eventName,\r\n                event_data: eventParams, // 发送合并后的参数\r\n            }),\r\n        })\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n            console.log('Event uploaded successfully:', data);\r\n        })\r\n            .catch((error) => {\r\n            console.error('Error uploading event:', error);\r\n        });\r\n    }\r\n    else {\r\n        console.log(`Event ${eventName} skipped due to sampling rate.`); // 修复了这里的拼接问题\r\n    }\r\n}\r\nexports.sendEvent = sendEvent;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.setupUnhandledRejectionHandling = exports.setupErrorHandling = void 0;\r\nconst event_1 = require(\"./event\");\r\n// 错误信息捕获：捕获同步错误\r\nfunction setupErrorHandling() {\r\n    window.onerror = function (message, // 错误消息（可能是 Event 类型）\r\n    source, // 错误发生的文件（可能是 undefined）\r\n    lineno, // 错误发生的行号（可能是 undefined）\r\n    colno, // 错误发生的列号（可能是 undefined）\r\n    error // 错误对象（可能是 null 或 undefined）\r\n    ) {\r\n        // 如果 message 是 Event 类型，将其转换为字符串\r\n        if (message instanceof Event) {\r\n            message = `Error event: ${message.type}`;\r\n        }\r\n        // 如果 source 是 undefined，设置为默认值\r\n        const sourceString = source || 'Unknown source';\r\n        // 如果 lineno 或 colno 是 undefined，设置为默认值\r\n        const lineNumber = lineno || 0;\r\n        const columnNumber = colno || 0;\r\n        // 如果 error 是 undefined，设置为 null\r\n        const errorObject = error || null;\r\n        // 构造错误上报的参数\r\n        const errorParams = {\r\n            message,\r\n            source: sourceString,\r\n            lineno: lineNumber,\r\n            colno: columnNumber,\r\n            error_stack: errorObject?.stack || '',\r\n            timestamp: new Date().toISOString(),\r\n        };\r\n        (0, event_1.sendEvent)('javascript_error', errorParams, 1); // 上报错误，采样率为 100%\r\n        return true; // 阻止浏览器默认处理错误（如弹出警告框）\r\n    };\r\n}\r\nexports.setupErrorHandling = setupErrorHandling;\r\n// 错误信息捕获：捕获未处理的 Promise 错误\r\nfunction setupUnhandledRejectionHandling() {\r\n    window.addEventListener('unhandledrejection', (event) => {\r\n        const errorParams = {\r\n            message: event.reason?.message || 'Unknown error',\r\n            stack: event.reason?.stack || '',\r\n            timestamp: new Date().toISOString(),\r\n        };\r\n        (0, event_1.sendEvent)('unhandled_promise_rejection', errorParams, 1); // 上报错误，采样率为 100%\r\n    });\r\n}\r\nexports.setupUnhandledRejectionHandling = setupUnhandledRejectionHandling;\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// 导入相关函数\r\nconst event_1 = require(\"./event\");\r\nconst register_1 = require(\"./register\");\r\n// 全局对象，存储 SDK 配置信息\r\nconst defaultConfig = {\r\n    project_id: 'demo',\r\n    upload_percent: 0.99,\r\n    page_id: window.location.href,\r\n};\r\n(function () {\r\n    // 获取项目配置，如果没有提供配置，则使用默认配置\r\n    const sdkConfig = {\r\n        ...defaultConfig,\r\n        project_id: window.sdkProjectId || defaultConfig.project_id,\r\n        upload_percent: window.sdkUploadPercent || defaultConfig.upload_percent,\r\n    };\r\n    // 调用 register 函数，传入配置\r\n    (0, register_1.register)(sdkConfig);\r\n    // 自动上传页面加载事件\r\n    window.addEventListener('load', () => {\r\n        (0, event_1.sendEvent)('page_load', {\r\n            page_url: window.location.href,\r\n            page_title: document.title,\r\n            timestamp: new Date().toISOString(),\r\n        }, sdkConfig.upload_percent);\r\n    });\r\n    // 绑定按钮和链接的点击事件\r\n    document.querySelectorAll('button').forEach(button => {\r\n        button.addEventListener('click', () => {\r\n            (0, event_1.sendEvent)('button_click', {\r\n                button_id: button.id,\r\n                button_text: button.innerText || button.value,\r\n                timestamp: new Date().toISOString(),\r\n            }, sdkConfig.upload_percent);\r\n        });\r\n    });\r\n    document.querySelectorAll('a').forEach(link => {\r\n        link.addEventListener('click', () => {\r\n            (0, event_1.sendEvent)('link_click', {\r\n                link_href: link.href,\r\n                link_text: link.innerText,\r\n                timestamp: new Date().toISOString(),\r\n            }, sdkConfig.upload_percent);\r\n        });\r\n    });\r\n    // 防抖处理输入框事件\r\n    const debounce = (func, delay) => {\r\n        let timeout;\r\n        return ((...args) => {\r\n            clearTimeout(timeout);\r\n            timeout = setTimeout(() => func(...args), delay);\r\n        });\r\n    };\r\n    document.querySelectorAll('input, textarea').forEach((input) => {\r\n        const target = input;\r\n        target.addEventListener('input', debounce((event) => {\r\n            (0, event_1.sendEvent)('input_field_change', {\r\n                input_id: target.id,\r\n                input_value: target.value,\r\n                timestamp: new Date().toISOString(),\r\n            }, sdkConfig.upload_percent);\r\n        }, 200)); // 缩短延迟时间为 200ms\r\n    });\r\n    // 自动监听页面滚动事件\r\n    window.addEventListener('scroll', () => {\r\n        (0, event_1.sendEvent)('page_scroll', {\r\n            scroll_position: window.scrollY,\r\n            page_height: document.documentElement.scrollHeight,\r\n            timestamp: new Date().toISOString(),\r\n        }, sdkConfig.upload_percent);\r\n    });\r\n    // 自动监听表单提交事件\r\n    document.querySelectorAll('form').forEach((form) => {\r\n        form.addEventListener('submit', (event) => {\r\n            event.preventDefault(); // 阻止表单默认提交行为\r\n            (0, event_1.sendEvent)('form_submit', {\r\n                form_id: form.id,\r\n                form_action: form.action,\r\n                timestamp: new Date().toISOString(),\r\n            }, sdkConfig.upload_percent);\r\n            // 延迟提交表单，确保事件上传后再提交\r\n            setTimeout(() => {\r\n                form.submit(); // 手动提交表单\r\n            }, 500); // 延迟 500ms 提交表单，确保事件上传\r\n        });\r\n    });\r\n})();\r\n"],"names":["root","factory","exports","module","define","amd","self","Object","defineProperty","value","register","getUserEnvironmentInfo","event_1","error_1","browserInfo","navigator","userAgent","osInfo","test","browser_info","os_info","uid","localStorage","getItem","timestamp","Date","toISOString","config","userEnvironment","completeConfig","addCommonParams","setupErrorHandling","setupUnhandledRejectionHandling","console","log","sendEvent","commonParams","params","eventName","uploadPercent","Math","random","shouldReportEvent","eventParams","fetch","method","headers","body","JSON","stringify","event_name","event_data","then","response","json","data","catch","error","window","onerror","message","source","lineno","colno","Event","type","errorObject","errorParams","error_stack","stack","addEventListener","event","reason","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","register_1","defaultConfig","project_id","upload_percent","page_id","location","href","sdkConfig","sdkProjectId","sdkUploadPercent","page_url","page_title","document","title","querySelectorAll","forEach","button","button_id","id","button_text","innerText","link","link_href","link_text","input","target","timeout","args","clearTimeout","setTimeout","input_id","input_value","func","debounce","scroll_position","scrollY","page_height","documentElement","scrollHeight","form","preventDefault","form_id","form_action","action","submit"],"sourceRoot":""}